@page "/vehicles/"
@inject HttpClient _client
@inject IJSRuntime _js
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<HeadingComponent Text="Car Vehicles"></HeadingComponent>
<br />

<a href="/vehicles/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Vehicle
</a>
<br />
@if (Vehicles == null)
{
    <div class="alert alert-info">Loading Vehicles...</div>
}
else
{
    <table class="table table">
        <thead>
            <tr>
                <th></th>
                <th>Make</th>
                <th>Model</th>
                <th>Year</th>
                <th>Daily Rate</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Vehicles != null)
            {
                @foreach (Vehicle vehicle in Vehicles)
                {
                    <tr>
                        <td><img src="@vehicle.ImageName" alt="@vehicle.ImageName" style="height:150px; width:150px;" /></td>
                        <td>@vehicle.Make.Name</td>
                        <td>@vehicle.Model.Name</td>
                        <td>@vehicle.Year</td>
                        <td>@vehicle.RentalRate</td>
                        <td>
                            <a href="/vehicles/view/@vehicle.Id" class="btn btn-primary">
                                <span class="oi oi-book"></span>
                            </a>
                            <a href="/vehicles/edit/@vehicle.Id" class="btn btn-warning">
                                <span class="oi oi-pencil"></span>
                            </a>
                            <button class="btn btn-danger" @onclick="@(() => Delete(vehicle.Id))">
                                <span class="oi oi-delete"></span>
                            </button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

@code {
    private List<Vehicle> Vehicles;

    protected async override Task OnInitializedAsync()
    {
        Vehicles = await _client.GetFromJsonAsync<List<Vehicle>>($"{Endpoints.VehiclesEndpoint}");
    }

    async Task Delete(int id)
    {
        var customer = Vehicles.First(q => q.Id == id);
        var confirm = await _js.InvokeAsync<bool>("confirm", $"Do you want to delete this?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.VehiclesEndpoint}{id}");
            await OnInitializedAsync();
        }
    }
}
