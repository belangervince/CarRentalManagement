@inject HttpClient _client

<EditForm Model="@booking" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Vehicle:</label>
            <div>
                <select @bind="booking.VehicleId" class="form-control">
                    <option value="">-- Select Vehicle --</option>
                    @if (vehicles != null)
                    {
                        foreach (var item in vehicles)
                        {
                            <option value="@item.Id">@item.Make.Name @item.Model.Name | @item.LicensePlateNumber</option>
                        }
                    }
                </select>
                <ValidationMessage For="@(() => booking.VehicleId)"></ValidationMessage>
            </div>
        </div>

        <div class="form-group">
            <label>Customer:</label>
            <div>
                <select @bind="booking.CustomerId" class="form-control">
                    <option value="">-- Select Customer --</option>
                    @if (customers != null)
                    {
                        foreach (var item in customers)
                        {
                            <option value="@item.Id">@item.TaxId | @item.EmailAddress</option>
                        }
                    }
                </select>
                <ValidationMessage For="@(() => booking.CustomerId)"></ValidationMessage>
            </div>
        </div>

        <div class="form-group">
            <label>Date Out:</label>
            <div>
                <InputDate @bind-Value="@booking.DateOut" class="form-control"></InputDate>
                <ValidationMessage For="@(() => booking.DateOut)"></ValidationMessage>
            </div>
        </div>

        @if (booking.Id > 0)
        {
            <div class="form-group">
                <label>Date In:</label>
                <div>
                    <InputDate @bind-Value="@booking.DateIn" class="form-control"></InputDate>
                    <ValidationMessage For="@(() => booking.DateIn)"></ValidationMessage>
                </div>
            </div>
        }
    </fieldset>
    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="bookings"></BackToList>
</EditForm>

@code {
    [Parameter] public Booking booking { get; set; }
    IList<Vehicle> vehicles;
    IList<Customer> customers;
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public bool Disabled { get; set; } = false;

    protected async override Task OnInitializedAsync()
    {
        vehicles = await _client.GetFromJsonAsync<List<Vehicle>>($"{Endpoints.VehiclesEndpoint}");
        customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
    }
}
